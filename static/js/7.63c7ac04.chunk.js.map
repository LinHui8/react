{"version":3,"sources":["components/NavHeader/index.js","components/NavHeader/index.module.css","pages/Login/index.module.css","pages/Login/index.js"],"names":["withRouter","children","history","onLeftClick","className","rightContent","styles","navBar","join","mode","icon","go","module","exports","Login","root","navHeader","size","formItem","input","name","placeholder","error","component","type","formSubmit","submit","backHome","Item","to","Component","withFormik","mapPropsToValues","username","password","validationSchema","Yup","shape","required","matches","handleSubmit","values","a","props","API","post","res","data","status","body","description","localStorage","setItem","token","location","state","replace","from","pathname","Toast","info"],"mappings":"gGAAA,sDA+CeA,iBAhCf,YAMI,IALFC,EAKC,EALDA,SACAC,EAIC,EAJDA,QACAC,EAGC,EAHDA,YACAC,EAEC,EAFDA,UACAC,EACC,EADDA,aAKA,OACE,kBAAC,IAAD,CACED,UAAW,CAACE,IAAOC,OAAQH,GAAa,IAAII,KAAK,KACjDC,KAAK,QACLC,KAAM,uBAAGN,UAAU,uBACnBD,YAAaA,GAPM,kBAAMD,EAAQS,IAAI,IAQrCN,aAAcA,GAEbJ,O,oBChCPW,EAAOC,QAAU,CAAC,OAAS,4B,oBCA3BD,EAAOC,QAAU,CAAC,KAAO,oBAAoB,UAAY,yBAAyB,SAAW,wBAAwB,SAAW,wBAAwB,MAAQ,qBAAqB,WAAa,0BAA0B,OAAS,sBAAsB,MAAQ,uB,kMC8B7PC,E,iLAEF,OACE,yBAAKV,UAAWE,IAAOS,MAErB,kBAAC,IAAD,CAAWX,UAAWE,IAAOU,WAA7B,4BACA,kBAAC,IAAD,CAAYC,KAAK,OAGjB,kBAAC,IAAD,KACE,kBAAC,IAAD,KAEE,yBAAKb,UAAWE,IAAOY,UACrB,kBAAC,IAAD,CACEd,UAAWE,IAAOa,MAClBC,KAAK,WACLC,YAAY,oCAGhB,kBAAC,IAAD,CACEjB,UAAWE,IAAOgB,MAClBF,KAAK,WACLG,UAAU,QAGZ,yBAAKnB,UAAWE,IAAOY,UACrB,kBAAC,IAAD,CACEd,UAAWE,IAAOa,MAClBC,KAAK,WACLI,KAAK,WACLH,YAAY,oCAGhB,kBAAC,IAAD,CACEjB,UAAWE,IAAOgB,MAClBF,KAAK,WACLG,UAAU,QAEZ,yBAAKnB,UAAWE,IAAOmB,YACrB,4BAAQrB,UAAWE,IAAOoB,OAAQF,KAAK,UAAvC,mBAKJ,kBAAC,IAAD,CAAMpB,UAAWE,IAAOqB,UACtB,kBAAC,IAAKC,KAAN,KACE,kBAAC,IAAD,CAAMC,GAAG,YAAT,mE,GA9CMC,aAwDpBhB,EAAQiB,YAAW,CAEjBC,iBAAkB,iBAAO,CAAEC,SAAU,GAAIC,SAAU,KAGnDC,iBAAkBC,MAAaC,MAAM,CACnCJ,SAAUG,MACPE,SAAS,wCACTC,QA5EW,qBA4EQ,wHACtBL,SAAUE,MACPE,SAAS,wCACTC,QA9ES,sBA8EQ,2HAItBC,aAAa,WAAD,4BAAE,WAAOC,EAAP,gCAAAC,EAAA,6DAAiBC,EAAjB,EAAiBA,MAErBV,EAAuBQ,EAAvBR,SAAUC,EAAaO,EAAbP,SAFN,SAMMU,IAAIC,KAAK,cAAe,CACxCZ,WACAC,aARU,OAMNY,EANM,SAW0BA,EAAIC,KAAlCC,EAXI,EAWJA,OAAQC,EAXJ,EAWIA,KAAMC,EAXV,EAWUA,YAEP,MAAXF,GAEFG,aAAaC,QAAQ,aAAcH,EAAKI,OAOnCV,EAAMW,SAASC,MAMlBZ,EAAMzC,QAAQsD,QAAQb,EAAMW,SAASC,MAAME,KAAKC,UAJhDf,EAAMzC,QAAQS,IAAI,IAWpBgD,IAAMC,KAAKV,EAAa,EAAG,MAAM,GAnCvB,2CAAF,qDAAC,IAfPnB,CAqDLjB,GAGYA","file":"static/js/7.63c7ac04.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport { NavBar } from 'antd-mobile'\r\n\r\n// 导入 withRouter 高阶组件\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n// 导入 props 校验的包\r\nimport PropTypes from 'prop-types'\r\n\r\n// 导入样式\r\n// import './index.scss'\r\nimport styles from './index.module.css'\r\n\r\n// 添加 className 和 rightContent（导航栏右侧内容） 属性\r\nfunction NavHeader({\r\n  children,\r\n  history,\r\n  onLeftClick,\r\n  className,\r\n  rightContent\r\n}) {\r\n  // 默认点击行为\r\n  const defaultHandler = () => history.go(-1)\r\n\r\n  return (\r\n    <NavBar\r\n      className={[styles.navBar, className || ''].join(' ')}\r\n      mode=\"light\"\r\n      icon={<i className=\"iconfont icon-back\" />}\r\n      onLeftClick={onLeftClick || defaultHandler}\r\n      rightContent={rightContent}\r\n    >\r\n      {children}\r\n    </NavBar>\r\n  )\r\n}\r\n\r\n// 添加props校验\r\nNavHeader.propTypes = {\r\n  children: PropTypes.string.isRequired,\r\n  onLeftClick: PropTypes.func,\r\n  className: PropTypes.string,\r\n  rightContent: PropTypes.array\r\n}\r\n\r\n// withRouter(NavHeader) 函数的返回值也是一个组件\r\nexport default withRouter(NavHeader)\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navBar\":\"NavHeader_navBar__2SDxf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Login_root__21NEQ\",\"navHeader\":\"Login_navHeader__1OS2B\",\"backHome\":\"Login_backHome__2XzHj\",\"formItem\":\"Login_formItem__26wSk\",\"input\":\"Login_input__2fv24\",\"formSubmit\":\"Login_formSubmit__24U0o\",\"submit\":\"Login_submit__2wveW\",\"error\":\"Login_error__12-2L\"};","import React, { Component } from 'react'\r\nimport { Flex, WingBlank, WhiteSpace, Toast } from 'antd-mobile'\r\n\r\nimport { Link } from 'react-router-dom'\r\n\r\n// 导入withFormik\r\nimport { withFormik, Form, Field, ErrorMessage } from 'formik'\r\n\r\n// 导入Yup\r\nimport * as Yup from 'yup'\r\n\r\n// 导入 API\r\nimport { API } from '../../utils'\r\n\r\nimport NavHeader from '../../components/NavHeader'\r\n\r\nimport styles from './index.module.css'\r\n\r\n// 验证规则：\r\nconst REG_UNAME = /^[a-zA-Z_\\d]{5,8}$/\r\nconst REG_PWD = /^[a-zA-Z_\\d]{5,12}$/\r\n\r\n/* \r\n  简化表单处理：\r\n\r\n  1 导入 Form 组件，替换 form 元素，去掉 onSubmit。\r\n  2 导入 Field 组件，替换 input 表单元素，去掉 onChange、onBlur、value。\r\n  3 导入 ErrorMessage 组件，原来的错误消息逻辑代码。\r\n  4 去掉所有 props。\r\n*/\r\n\r\nclass Login extends Component {\r\n  render() {\r\n    return (\r\n      <div className={styles.root}>\r\n        {/* 顶部导航 */}\r\n        <NavHeader className={styles.navHeader}>账号登录</NavHeader>\r\n        <WhiteSpace size=\"xl\" />\r\n\r\n        {/* 登录表单 */}\r\n        <WingBlank>\r\n          <Form>\r\n            {/* 账号 */}\r\n            <div className={styles.formItem}>\r\n              <Field\r\n                className={styles.input}\r\n                name=\"username\"\r\n                placeholder=\"请输入账号\"\r\n              />\r\n            </div>\r\n            <ErrorMessage\r\n              className={styles.error}\r\n              name=\"username\"\r\n              component=\"div\"\r\n            />\r\n            {/* 密码 */}\r\n            <div className={styles.formItem}>\r\n              <Field\r\n                className={styles.input}\r\n                name=\"password\"\r\n                type=\"password\"\r\n                placeholder=\"请输入密码\"\r\n              />\r\n            </div>\r\n            <ErrorMessage\r\n              className={styles.error}\r\n              name=\"password\"\r\n              component=\"div\"\r\n            />\r\n            <div className={styles.formSubmit}>\r\n              <button className={styles.submit} type=\"submit\">\r\n                登 录\r\n              </button>\r\n            </div>\r\n          </Form>\r\n          <Flex className={styles.backHome}>\r\n            <Flex.Item>\r\n              <Link to=\"/registe\">还没有账号，去注册~</Link>\r\n            </Flex.Item>\r\n          </Flex>\r\n        </WingBlank>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// 使用 withFormik 高阶组件包装 Login 组件，为 Login 组件提供属性和方法\r\nLogin = withFormik({\r\n  // 提供状态：\r\n  mapPropsToValues: () => ({ username: '', password: '' }),\r\n\r\n  // 添加表单校验规则\r\n  validationSchema: Yup.object().shape({\r\n    username: Yup.string()\r\n      .required('账号为必填项')\r\n      .matches(REG_UNAME, '长度为5到8位，只能出现数字、字母、下划线'),\r\n    password: Yup.string()\r\n      .required('密码为必填项')\r\n      .matches(REG_PWD, '长度为5到12位，只能出现数字、字母、下划线')\r\n  }),\r\n\r\n  // 表单的提交事件\r\n  handleSubmit: async (values, { props }) => {\r\n    // 获取账号和密码\r\n    const { username, password } = values\r\n\r\n    // console.log('表单提交了', username, password)\r\n    // 发送请求\r\n    const res = await API.post('/user/login', {\r\n      username,\r\n      password\r\n    })\r\n\r\n    const { status, body, description } = res.data\r\n\r\n    if (status === 200) {\r\n      // 登录成功\r\n      localStorage.setItem('hkzf_token', body.token)\r\n\r\n      /* \r\n        1 登录成功后，判断是否需要跳转到用户想要访问的页面（判断 props.location.state 是否有值）。\r\n        2 如果不需要（没有值），则直接调用 history.go(-1) 返回上一页。\r\n        3 如果需要，就跳转到 from.pathname 指定的页面（推荐使用 replace 方法模式，而不是 push）。\r\n      */\r\n      if (!props.location.state) {\r\n        // 此时，表示是直接进入到了该页面，直接调用 go(-1) 即可\r\n        props.history.go(-1)\r\n      } else {\r\n        // push：[home, login, map]\r\n        // replace: [home, map]\r\n        props.history.replace(props.location.state.from.pathname)\r\n      }\r\n      // 注意：无法在该方法中，通过 this 来获取到路由信息\r\n      // 所以，需要通过 第二个对象参数中获取到 props 来使用 props\r\n      // props.history.go(-1)\r\n    } else {\r\n      // 登录失败\r\n      Toast.info(description, 2, null, false)\r\n    }\r\n  }\r\n})(Login)\r\n\r\n// 注意：此处返回的是 高阶组件 包装后的组件\r\nexport default Login\r\n"],"sourceRoot":""}